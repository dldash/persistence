plugins {
    id 'signing'
    id 'java-library'
    id 'maven-publish'
}

group 'io.github.dldash'
version '0.1.1'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
}

test {
    useJUnitPlatform()
}

tasks.named('jar') {
    manifest {
        attributes(
                'Implementation-Title': project.name,
                'Implementation-Version': project.version
        )
    }
}

/*
publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/dldash/persistence")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("GITHIB_USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("GITHIB_TOKEN")
            }
        }
    }

    publications {
        gpr(MavenPublication) {
            from(components.java)
        }
    }
}
*/

/**
 * - https://madhead.me/posts/no-bullshit-maven-publish
 * - https://weibeld.net/java/publish-to-maven-central.html
 * - https://dev.to/kengotoda/deploying-to-ossrh-with-gradle-in-2020-1lhi
 *
 * alias gpg='docker run --rm -it -v $(pwd)/.gnupg:/root/.gnupg -e GPG_TTY=/dev/console vladgh/gpg'
 */
java {
    withJavadocJar()
    withSourcesJar()
}

ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

publishing {
    repositories {
        maven {
            def releaseRepo = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotRepo = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            url = isReleaseVersion ? releaseRepo : snapshotRepo
            credentials {
                username = project.findProperty("ossrh.username") ?: System.getenv("OSSRH_USERNAME")
                password = project.findProperty("ossrh.password") ?: System.getenv("OSSRH_PASSWORD")
            }
        }
    }

    publications {
        maven(MavenPublication) {
            from components.java
            pom {
                name = "persistence"
                description = "Database Query Builder"
                url = "https://github.com/dldash/persistence"
                licenses {
                    license {
                        name = "The Apache License, Version 2.0"
                        url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                    }
                }
                developers {
                    developer {
                        id = "dldash"
                        name = "dldash"
                        email = "dldash@noreply.github.com"
                    }
                }
                scm {
                    connection = "scm:git:git@github.com:dldash/persistence.git"
                    developerConnection = "scm:git:git@github.com:dldash/persistence.git"
                    url = "https://github.com/dldash/persistence"
                }
            }
        }
    }
}

signing {
    sign publishing.publications.maven
}

tasks.withType(Sign) {
    onlyIf { isReleaseVersion }
}